--!strict

--[[
    List of operands of each opcode (used by this VM)
    - Z = No operand
    - B = unsigned 8 bit
    - b = signed 8 bit
    - S = unsigned 16 bit
    - s = signed 16 bit
    - W = unsigned 24 bit
    - i = signed 32 bit integer
]]
local opcodes: { string } = {
    [0] = "OP_NOP",
    "OP_MOVE",
    "OP_LOADL",
    "OP_LOADI",
    "OP_LOADINEG",
    "OP_LOADI__1",
    "OP_LOADI_0",
    "OP_LOADI_1",
    "OP_LOADI_2",
    "OP_LOADI_3",
    "OP_LOADI_4",
    "OP_LOADI_5",
    "OP_LOADI_6",
    "OP_LOADI_7",
    "OP_LOADI16",
    "OP_LOADI32",
    "OP_LOADSYM",
    "OP_LOADNIL",
    "OP_LOADSELF",
    "OP_LOADT",
    "OP_LOADF",
    "OP_GETGV",
    "OP_SETGV",
    "OP_GETSV",
    "OP_SETSV",
    "OP_GETIV",
    "OP_SETIV",
    "OP_GETCV",
    "OP_SETCV",
    "OP_GETCONST",
    "OP_SETCONST",
    "OP_GETMCNST",
    "OP_SETMCNST",
    "OP_GETUPVAR",
    "OP_SETUPVAR",
    "OP_GETIDX",
    "OP_SETIDX",
    "OP_JMP",
    "OP_JMPIF",
    "OP_JMPNOT",
    "OP_JMPNIL",
    "OP_JMPUW",
    "OP_EXCEPT",
    "OP_RESCUE",
    "OP_RAISEIF",
    "OP_SSEND",
    "OP_SSENDB",
    "OP_SEND",
    "OP_SENDB",
    "OP_CALL",
    "OP_SUPER",
    "OP_ARGARY",
    "OP_ENTER",
    "OP_KEY_P",
    "OP_KEYEND",
    "OP_KARG",
    "OP_RETURN",
    "OP_RETURN_BLK",
    "OP_BREAK",
    "OP_BLKPUSH",
    "OP_ADD",
    "OP_ADDI",
    "OP_SUB",
    "OP_SUBI",
    "OP_MUL",
    "OP_DIV",
    "OP_EQ",
    "OP_LT",
    "OP_LE",
    "OP_GT",
    "OP_GE",
    "OP_ARRAY",
    "OP_ARRAY2",
    "OP_ARYCAT",
    "OP_ARYPUSH",
    "OP_ARYDUP",
    "OP_AREF",
    "OP_ASET",
    "OP_APOST",
    "OP_INTERN",
    "OP_SYMBOL",
    "OP_STRING",
    "OP_STRCAT",
    "OP_HASH",
    "OP_HASHADD",
    "OP_HASHCAT",
    "OP_LAMBDA",
    "OP_BLOCK",
    "OP_METHOD",
    "OP_RANGE_INC",
    "OP_RANGE_EXC",
    "OP_OCLASS",
    "OP_CLASS",
    "OP_MODULE",
    "OP_EXEC",
    "OP_DEF",
    "OP_ALIAS",
    "OP_UNDEF",
    "OP_SCLASS",
    "OP_TCLASS",
    "OP_DEBUG",
    "OP_ERR",
    "OP_EXT1",
    "OP_EXT2",
    "OP_EXT3",
    "OP_STOP",
}

local operands = {
    [0] = {},
    [1] = {"B", "B"},
    [2] = {"B", "B"},
    [3] = {"B", "B"},
    [4] = {"B", "B"},
    [5] = {"B"},
    [6] = {"B"},
    [7] = {"B"},
    [8] = {"B"},
    [9] = {"B"},
    [10] = {"B"},
    [11] = {"B"},
    [12] = {"B"},
    [13] = {"B"},
    [14] = {"B", "S"},
    [15] = {"B", "S", "S"},
    [16] = {"B", "B"},
    [17] = {"B"},
    [18] = {"B"},
    [19] = {"B"},
    [20] = {"B"},
    [21] = {"B", "B"},
    [22] = {"B", "B"},
    [23] = {"B", "B"},
    [24] = {"B", "B"},
    [25] = {"B", "B"},
    [26] = {"B", "B"},
    [27] = {"B", "B"},
    [28] = {"B", "B"},
    [29] = {"B", "B"},
    [30] = {"B", "B"},
    [31] = {"B", "B"},
    [32] = {"B", "B"},
    [33] = {"B", "B", "B"},
    [34] = {"B", "B", "B"},
    [35] = {"B"},
    [36] = {"B"},
    [37] = {"S"},
    [38] = {"B", "S"},
    [39] = {"B", "S"},
    [40] = {"B", "S"},
    [41] = {"S"},
    [42] = {"B"},
    [43] = {"B", "B"},
    [44] = {"B"},
    [45] = {"B", "B", "B"},
    [46] = {"B", "B", "B"},
    [47] = {"B", "B", "B"},
    [48] = {"B", "B", "B"},
    [49] = {},
    [50] = {"B", "B"},
    [51] = {"B", "S"},
    [52] = {"W"},
    [53] = {"B", "B"},
    [54] = {},
    [55] = {"B", "B"},
    [56] = {"B"},
    [57] = {"B"},
    [58] = {"B"},
    [59] = {"B", "S"},
    [60] = {"B"},
    [61] = {"B", "B"},
    [62] = {"B"},
    [63] = {"B", "B"},
    [64] = {"B"},
    [65] = {"B"},
    [66] = {"B"},
    [67] = {"B"},
    [68] = {"B"},
    [69] = {"B"},
    [70] = {"B"},
    [71] = {"B", "B"},
    [72] = {"B", "B", "B"},
    [73] = {"B"},
    [74] = {"B", "B"},
    [75] = {"B"},
    [76] = {"B", "B", "B"},
    [77] = {"B", "B", "B"},
    [78] = {"B", "B", "B"},
    [79] = {"B"},
    [80] = {"B", "B"},
    [81] = {"B", "B"},
    [82] = {"B"},
    [83] = {"B", "B"},
    [84] = {"B", "B"},
    [85] = {"B"},
    [86] = {"B", "B"},
    [87] = {"B", "B"},
    [88] = {"B", "B"},
    [89] = {"B"},
    [90] = {"B"},
    [91] = {"B"},
    [92] = {"B", "B"},
    [93] = {"B", "B"},
    [94] = {"B", "B"},
    [95] = {"B", "B"},
    [96] = {"B", "B"},
    [97] = {"B"},
    [98] = {"B"},
    [99] = {"B"},
    [100] = {"B", "B", "B"},
    [101] = {"B"},
    [102] = {},
    [103] = {},
    [104] = {},
    [105] = {},
}

return {
    opcodes = opcodes,
    operands = operands,
}